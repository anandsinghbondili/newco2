'use client';

import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Separator } from "@/components/ui/separator";
import { useEffect, useState } from "react";

/**
 * Dummy user object ‚Äì replace with real data fetched from your API.
 */
const mockUser = {
    fullName: "Jane Doe",
    username: "jane",
    bio: "Full‚Äëstack developer. Coffee lover ‚òï. Amateur climber üßó‚Äç‚ôÄÔ∏è.",
    location: "Bengaluru, IN",
    website: "https://jane.dev",
    avatarUrl: "https://i.pravatar.cc/150?img=47",
    joinDate: "2023‚Äë02‚Äë14",
    stats: {
        posts: 128,
        followers: 560,
        following: 180,
    },
    roles: ["Pro", "Moderator"],
};

export default function ProfilePage() {
    const [user, setUser] = useState<typeof mockUser | null>(null);

    useEffect(() => {
        // TODO: replace with real API call
        setUser(mockUser);
    }, []);

    if (!user) return null;

    return (
        <div className="container mx-auto px-4 py-8 max‚Äëw‚Äë4xl">
            <Card className="shadow‚Äëlg">
                <CardHeader className="flex flex‚Äëcol md:flex‚Äërow md:items‚Äëcenter gap‚Äë4 md:gap‚Äë6">
                    <Avatar className="h‚Äë24 w‚Äë24">
                        <AvatarImage src={user.avatarUrl} alt={user.fullName} />
                        <AvatarFallback>{user.fullName.slice(0, 2)}</AvatarFallback>
                    </Avatar>

                    <div className="flex‚Äë1 space‚Äëy‚Äë2 min‚Äëw‚Äë0">
                        <CardTitle className="truncate text‚Äë2xl font‚Äësemibold">{user.fullName}</CardTitle>
                        <p className="text‚Äëmuted‚Äëforeground truncate">@{user.username}</p>

                        <div className="flex flex‚Äëwrap gap‚Äë2">
                            {user.roles.map((role) => (
                                <Badge key={role}>{role}</Badge>
                            ))}
                        </div>
                    </div>

                    <Button asChild className="mt‚Äë4 md:mt‚Äë0 w‚Äë36">
                        <a href="/settings">Edit Profile</a>
                    </Button>
                </CardHeader>

                <Separator />

                <CardContent className="grid grid‚Äëcols‚Äë1 md:grid‚Äëcols‚Äë3 gap‚Äë6 py‚Äë6">
                    {/* Bio */}
                    <div className="md:col‚Äëspan‚Äë2 space‚Äëy‚Äë2">
                        <h3 className="font‚Äëmedium">About</h3>
                        <p className="text‚Äësm leading‚Äërelaxed break‚Äëwords whitespace‚Äëpre‚Äëwrap" >
                            {user.bio}
                        </p>
                    </div>

                    {/* Stats */}
                    <div className="flex md:flex‚Äëcol justify‚Äëaround md:justify‚Äëstart gap‚Äë4 text‚Äëcenter md:text‚Äëleft">
                        {Object.entries(user.stats).map(([label, value]) => (
                            <div key={label}>
                                <p className="text‚Äë2xl font‚Äëbold leading‚Äënone">{value}</p>
                                <p className="uppercase tracking‚Äëwider text‚Äëxs text‚Äëmuted‚Äëforeground">
                                    {label}
                                </p>
                            </div>
                        ))}
                    </div>
                </CardContent>

                <Separator />

                <CardFooter className="flex flex‚Äëcol gap‚Äë2 md:flex‚Äërow md:gap‚Äë6 py‚Äë6 text‚Äësm">
                    <div>
                        <p className="font‚Äëmedium">Location</p>
                        <p className="text‚Äëmuted‚Äëforeground">{user.location}</p>
                    </div>
                    <div>
                        <p className="font‚Äëmedium">Website</p>
                        <a
                            href={user.website}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text‚Äëprimary hover:underline break‚Äëall"
                        >
                            {user.website.replace(/^https?:\/\//, "")}
                        </a>
                    </div>
                    <div>
                        <p className="font‚Äëmedium">Member since</p>
                        <p className="text‚Äëmuted‚Äëforeground">
                            {new Date(user.joinDate).toLocaleDateString()}
                        </p>
                    </div>
                </CardFooter>
            </Card>
        </div>
    );
}