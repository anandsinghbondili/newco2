{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,8OAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACiD;IACpD,qBACE,8OAAC,oKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+eACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;sBAEV,cAAA,8OAAC,wMAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI7B","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/app/hooks/use-media-query.ts"],"sourcesContent":["// hooks/use-media-query.ts\n\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport function useMediaQuery(query: string): boolean {\n    const [matches, setMatches] = useState(false);\n\n    useEffect(() => {\n        const media = window.matchMedia(query);\n        if (media.matches !== matches) {\n            setMatches(media.matches);\n        }\n        const listener = () => setMatches(media.matches);\n        media.addListener(listener);\n        return () => media.removeListener(listener);\n    }, [matches, query]);\n\n    return matches;\n}"],"names":[],"mappings":"AAAA,2BAA2B;;;;AAG3B;AAFA;;AAIO,SAAS,cAAc,KAAa;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,QAAQ,OAAO,UAAU,CAAC;QAChC,IAAI,MAAM,OAAO,KAAK,SAAS;YAC3B,WAAW,MAAM,OAAO;QAC5B;QACA,MAAM,WAAW,IAAM,WAAW,MAAM,OAAO;QAC/C,MAAM,WAAW,CAAC;QAClB,OAAO,IAAM,MAAM,cAAc,CAAC;IACtC,GAAG;QAAC;QAAS;KAAM;IAEnB,OAAO;AACX","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ext/grid/ExtendedGrid.tsx"],"sourcesContent":["// components/ext/grid/ExtendedGrid.tsx\n// ShadCN‑powered DataTable with TanStack Table v8 + a locked checkbox‑selection column.\n\n\"use client\";\n\nimport * as React from \"react\";\nimport {\n    ColumnDef,\n    flexRender,\n    getCoreRowModel,\n    getPaginationRowModel,\n    getSortedRowModel,\n    useReactTable,\n    getFilteredRowModel,\n    ColumnResizeMode,\n    ColumnOrderState,\n    ColumnPinningState,\n    VisibilityState,\n} from \"@tanstack/react-table\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableHeader,\n    TableRow,\n} from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n    Download,\n    ArrowDown,\n    ArrowUp,\n    ChevronFirst,\n    ChevronLast,\n    ChevronLeft,\n    ChevronRight,\n    Columns,\n    Filter,\n    GripVertical,\n    List,\n    MoreVertical,\n    Settings,\n    Menu,\n    RefreshCcw,\n} from \"lucide-react\";\nimport * as XLSX from \"xlsx\";\nimport {\n    DropdownMenu,\n    DropdownMenuCheckboxItem,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuLabel,\n    DropdownMenuSeparator,\n    DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { cn } from \"@/lib/utils\";\nimport { useMediaQuery } from \"@/app/hooks/use-media-query\";\n\ninterface ExtendedGridProps<T> {\n    columns: ColumnDef<T, unknown>[];\n    data: T[];\n    title?: string;\n    pageSize?: number;\n    enableColumnResizing?: boolean;\n    enableColumnReordering?: boolean;\n    enableColumnPinning?: boolean;\n    enableRowSelection?: boolean;\n    enableMultiRowSelection?: boolean;\n    enablePagination?: boolean;\n    enableExport?: boolean;\n    enableFilters?: boolean;\n    enableSorting?: boolean;\n    striped?: boolean;\n    bordered?: boolean;\n    hoverable?: boolean;\n    height?: string;\n    width?: string;\n    className?: string;\n    onRowDoubleClick?: (record: T) => void;\n    onRefresh?: () => void;\n}\n\nexport function ExtendedGrid<T>({\n    columns,\n    data,\n    title = \"\",\n    pageSize = 10,\n    enableColumnResizing = true,\n    enableColumnReordering = true,\n    enableColumnPinning = true,\n    enableRowSelection = true,\n    enableMultiRowSelection = true,\n    enablePagination = true,\n    enableExport = true,\n    enableFilters = true,\n    enableSorting = true,\n    striped = true,\n    bordered = true,\n    hoverable = true,\n    height = \"100%\",\n    width = \"100%\",\n    className = \"\",\n    onRowDoubleClick,\n    onRefresh,\n}: ExtendedGridProps<T>) {\n    const isMobile = useMediaQuery(\"(max-width: 768px)\");\n\n    /* ------------------------------------------------------------------ */\n    /* Selection column (always visible + pinned left)                     */\n    /* ------------------------------------------------------------------ */\n    const selectionColumn: ColumnDef<T, unknown> = {\n        id: \"__select\",\n        size: 60,\n        header: ({ table }) => (\n            <Checkbox\n                checked={table.getIsAllRowsSelected()}\n                onCheckedChange={(v) => table.toggleAllRowsSelected(!!v)}\n                aria-label=\"Select all\"\n                className=\"translate-y-[2px]\"\n            />\n        ),\n        cell: ({ row }) => (\n            <Checkbox\n                checked={row.getIsSelected()}\n                onCheckedChange={(v) => row.toggleSelected(!!v)}\n                aria-label=\"Select row\"\n                className=\"translate-y-[2px]\"\n            />\n        ),\n        enableHiding: false,\n        enableResizing: false,\n        meta: { isSelection: true },\n    };\n\n    const allColumns = React.useMemo(() => [selectionColumn, ...columns], [columns]);\n\n    /* ------------------------------------------------------------------ */\n    /* States                                                             */\n    /* ------------------------------------------------------------------ */\n    const [sorting, setSorting] = React.useState<import(\"@tanstack/react-table\").SortingState>([]);\n    const [columnFilters, setColumnFilters] = React.useState<import(\"@tanstack/react-table\").ColumnFiltersState>([]);\n    const [rowSelection, setRowSelection] = React.useState<import(\"@tanstack/react-table\").RowSelectionState>({});\n    const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({ __select: true });\n    const [columnOrder, setColumnOrder] = React.useState<ColumnOrderState>([]);\n    const [columnPinning, setColumnPinning] = React.useState<ColumnPinningState>({ left: [\"__select\"] });\n    const [columnResizeMode, setColumnResizeMode] = React.useState<ColumnResizeMode>(\"onChange\");\n    const [globalFilter, setGlobalFilter] = React.useState(\"\");\n\n    // keep columnOrder synced with columns prop changes\n    React.useEffect(() => {\n        setColumnOrder(\n            allColumns.map((c, i) => (c.id ? c.id.toString() : `col${i}`)) as ColumnOrderState\n        );\n    }, [allColumns]);\n\n    // Responsive visibility (never hide selection column)\n    React.useEffect(() => {\n        if (isMobile) {\n            const mobileVisible: VisibilityState = { __select: true };\n            columns.forEach((col, i) => {\n                if (i < 2) mobileVisible[col.id as string] = true;\n            });\n            setColumnVisibility(mobileVisible);\n        } else {\n            const vis: VisibilityState = { __select: true };\n            columns.forEach((col) => {\n                vis[col.id as string] = true;\n            });\n            setColumnVisibility(vis);\n        }\n    }, [isMobile, columns]);\n\n    const table = useReactTable({\n        data,\n        columns: allColumns,\n        state: {\n            sorting,\n            columnFilters,\n            rowSelection,\n            columnVisibility,\n            columnOrder,\n            columnPinning,\n            globalFilter,\n        },\n        onSortingChange: enableSorting ? setSorting : undefined,\n        onColumnFiltersChange: enableFilters ? setColumnFilters : undefined,\n        onRowSelectionChange: enableRowSelection ? setRowSelection : undefined,\n        onColumnVisibilityChange: setColumnVisibility,\n        onColumnOrderChange: setColumnOrder,\n        onColumnPinningChange: setColumnPinning,\n        onGlobalFilterChange: setGlobalFilter,\n        getCoreRowModel: getCoreRowModel(),\n        getSortedRowModel: enableSorting ? getSortedRowModel() : undefined,\n        getPaginationRowModel: enablePagination ? getPaginationRowModel() : undefined,\n        getFilteredRowModel: enableFilters ? getFilteredRowModel() : undefined,\n        enableRowSelection,\n        enableMultiRowSelection,\n        columnResizeMode,\n    });\n\n    React.useEffect(() => {\n        table.setPageSize(pageSize);\n    }, [pageSize, table]);\n\n    /* Pin selection column left always */\n    React.useEffect(() => {\n        if (enableRowSelection) {\n            table.getColumn(\"__select\")?.pin(\"left\");\n        }\n    }, [table, enableRowSelection]);\n\n    /* ------------------------------------------------------------------ */\n    /* Export helpers                                                     */\n    /* ------------------------------------------------------------------ */\n    const exportToExcel = () => {\n        const exportData = table.getFilteredRowModel().rows.map((r) => r.original);\n        const ws = XLSX.utils.json_to_sheet(exportData);\n        const wb = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\n        XLSX.writeFile(wb, `${title || \"data\"}.xlsx`);\n    };\n\n    const resetFilters = () => {\n        table.resetColumnFilters();\n        setGlobalFilter(\"\");\n    };\n    const resetSorting = () => table.resetSorting();\n    const resetAll = () => {\n        resetFilters();\n        resetSorting();\n        table.resetColumnOrder();\n        table.resetColumnVisibility();\n        table.resetColumnPinning();\n    };\n\n    /* ------------------------------------------------------------------ */\n    /* UI                                                                 */\n    /* ------------------------------------------------------------------ */\n    return (\n        <div className={cn(\"flex flex-col h-full w-full\", className)} style={{ width, height }}>\n            {/* Header ------------------------------------------------------ */}\n            <div className=\"flex flex-col md:flex-row md:items-center justify-between gap-2 p-2\">\n                <h2 className=\"text-lg md:text-xl font-semibold truncate\">{title}</h2>\n\n                <div className=\"flex flex-wrap gap-2\">\n                    {/* Search */}\n                    {enableFilters && (\n                        <div className=\"relative flex-1 min-w-[150px] max-w-[300px]\">\n                            <Input\n                                placeholder=\"Search...\"\n                                value={globalFilter ?? \"\"}\n                                onChange={(e) => setGlobalFilter(e.target.value)}\n                                className=\"h-8 w-full\"\n                            />\n                            <Filter className=\"absolute right-2 top-2 h-4 w-4 text-muted-foreground\" />\n                        </div>\n                    )}\n\n                    {/* Add this refresh button */}\n                    {onRefresh && (\n                        <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={onRefresh}\n                            className=\"h-8\"\n                        >\n                            {isMobile ? (\n                                <RefreshCcw className=\"h-4 w-4\" />\n                            ) : (\n                                <>\n                                    <RefreshCcw className=\"h-4 w-4 mr-2\" />\n                                    Refresh\n                                </>\n                            )}\n                        </Button>\n                    )}\n\n                    {/* Settings menu */}\n                    <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                            <Button variant=\"outline\" size=\"sm\" className=\"h-8\">\n                                {isMobile ? <Menu className=\"h-4 w-4\" /> : (<><Settings className=\"h-4 w-4 mr-2\" />Settings</>)}\n                            </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\" className=\"w-[200px]\">\n                            <DropdownMenuLabel>Table Options</DropdownMenuLabel>\n                            <DropdownMenuSeparator />\n                            {!isMobile && (\n                                <>\n                                    <DropdownMenuCheckboxItem\n                                        checked={enableColumnResizing}\n                                        onCheckedChange={(v) => setColumnResizeMode(v ? \"onChange\" : \"onEnd\")}\n                                    >Column Resizing</DropdownMenuCheckboxItem>\n                                    <DropdownMenuCheckboxItem disabled={!enableColumnReordering}>Column Reordering</DropdownMenuCheckboxItem>\n                                    <DropdownMenuCheckboxItem disabled={!enableColumnPinning}>Column Pinning</DropdownMenuCheckboxItem>\n                                    <DropdownMenuSeparator />\n                                </>\n                            )}\n                            <DropdownMenuItem onClick={resetFilters}>Reset Filters</DropdownMenuItem>\n                            <DropdownMenuItem onClick={resetSorting}>Reset Sorting</DropdownMenuItem>\n                            <DropdownMenuItem onClick={resetAll}>Reset All</DropdownMenuItem>\n                        </DropdownMenuContent>\n                    </DropdownMenu>\n\n                    {/* Column visibility */}\n                    <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                            <Button variant=\"outline\" size=\"sm\" className=\"h-8\">\n                                {isMobile ? <Columns className=\"h-4 w-4\" /> : (<><Columns className=\"h-4 w-4 mr-2\" />Columns</>)}\n                            </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\">\n                            {table.getAllColumns().filter((c) => c.getCanHide()).map((col) => (\n                                <DropdownMenuCheckboxItem key={col.id} checked={col.getIsVisible()} onCheckedChange={(v) => col.toggleVisibility(!!v)}>\n                                    {col.id}\n                                </DropdownMenuCheckboxItem>\n                            ))}\n                        </DropdownMenuContent>\n                    </DropdownMenu>\n\n                    {enableExport && (\n                        <Button variant=\"outline\" size=\"sm\" onClick={exportToExcel} className=\"h-8\">\n                            {isMobile ? <Download className=\"h-4 w-4\" /> : (<><Download className=\"h-4 w-4 mr-2\" />Export</>)}\n                        </Button>\n                    )}\n                </div>\n            </div>\n\n            {/* Table wrapper ---------------------------------------------- */}\n            <div\n                className={cn(\n                    \"flex-1 min-h-0 overflow-auto border rounded-lg relative\",\n                    bordered && \"border\",\n                    striped && \"[&_tr:nth-child(even)]:bg-muted/10\",\n                    hoverable && \"[&_tr:hover]:bg-muted/50\"\n                )}\n            >\n                <Table className=\"w-full\">\n                    <TableHeader className=\"sticky top-0 bg-background z-10 shadow-sm border-b\">\n                        {table.getHeaderGroups().map((hg) => (\n                            <TableRow key={hg.id}>\n                                {hg.headers.map((header) => {\n                                    const canSort = enableSorting && header.column.getCanSort();\n                                    const sortDir = header.column.getIsSorted();\n\n                                    // Selection column gets fixed styles\n                                    if (header.column.id === \"__select\") {\n                                        return (\n                                            <TableHead key={header.id} className=\"sticky left-0 z-20 bg-background w-20 min-w-[33px] max-w-[33px]\">\n                                                {flexRender(header.column.columnDef.header, header.getContext())}\n                                            </TableHead>\n                                        );\n                                    }\n\n                                    return (\n                                        <TableHead\n                                            key={header.id}\n                                            onClick={canSort ? header.column.getToggleSortingHandler() : undefined}\n                                            className={cn(\n                                                \"relative group px-3 py-2\", // 📦 padding\n                                                \"bg-muted/30\",              // 💡 slight background\n                                                \"text-xs font-semibold uppercase\", // 🧑‍🎓 clearer header text\n                                                canSort && \"cursor-pointer\",\n                                                header.column.getIsPinned() && \"sticky bg-background\",\n                                                isMobile && \"min-w-[120px]\"\n                                            )}\n                                            style={{\n                                                width: header.getSize(),\n                                                left: header.column.getIsPinned() === \"left\" ? `${header.getStart()}px` : undefined,\n                                                right: header.column.getIsPinned() === \"right\" ? `${header.getLeafHeaders()[0].getSize()}px` : undefined,\n                                            }}\n                                        >\n                                            <div className=\"flex items-center justify-between\">\n                                                <div className=\"flex items-center gap-1 truncate\">\n                                                    {!isMobile && enableColumnReordering && (\n                                                        <GripVertical className=\"w-3 h-3 mr-1 text-muted-foreground cursor-grab\" />\n                                                    )}\n                                                    <span className=\"truncate\">\n                                                        {flexRender(header.column.columnDef.header, header.getContext())}\n                                                    </span>\n                                                    {canSort && sortDir === \"asc\" && <ArrowUp className=\"w-3 h-3 ml-1\" />}\n                                                    {canSort && sortDir === \"desc\" && <ArrowDown className=\"w-3 h-3 ml-1\" />}\n                                                </div>\n                                                {!isMobile && (\n                                                    <DropdownMenu>\n                                                        <DropdownMenuTrigger asChild>\n                                                            <Button variant=\"ghost\" size=\"sm\" className=\"h-4 w-4 p-0\"><MoreVertical className=\"h-3 w-3\" /></Button>\n                                                        </DropdownMenuTrigger>\n                                                        <DropdownMenuContent align=\"end\">\n                                                            {enableSorting && (\n                                                                <>\n                                                                    <DropdownMenuItem onClick={() => header.column.toggleSorting(false)}><ArrowUp className=\"mr-2 h-3.5 w-3.5\" />Sort Ascending</DropdownMenuItem>\n                                                                    <DropdownMenuItem onClick={() => header.column.toggleSorting(true)}><ArrowDown className=\"mr-2 h-3.5 w-3.5\" />Sort Descending</DropdownMenuItem>\n                                                                    <DropdownMenuItem onClick={() => header.column.clearSorting()} disabled={!header.column.getIsSorted()}><List className=\"mr-2 h-3.5 w-3.5\" />Clear Sort</DropdownMenuItem>\n                                                                    <DropdownMenuSeparator />\n                                                                </>\n                                                            )}\n                                                            {enableColumnPinning && (\n                                                                <>\n                                                                    <DropdownMenuItem onClick={() => header.column.pin(\"left\")} disabled={header.column.getIsPinned() === \"left\"}>Pin Left</DropdownMenuItem>\n                                                                    <DropdownMenuItem onClick={() => header.column.pin(\"right\")} disabled={header.column.getIsPinned() === \"right\"}>Pin Right</DropdownMenuItem>\n                                                                    <DropdownMenuItem onClick={() => header.column.pin(false)} disabled={!header.column.getIsPinned()}>Unpin</DropdownMenuItem>\n                                                                    <DropdownMenuSeparator />\n                                                                </>\n                                                            )}\n                                                            <DropdownMenuItem onClick={() => header.column.toggleVisibility(false)}>Hide Column</DropdownMenuItem>\n                                                        </DropdownMenuContent>\n                                                    </DropdownMenu>\n                                                )}\n                                            </div>\n                                            {enableFilters && header.column.getCanFilter() && !isMobile && (\n                                                <Input\n                                                    type=\"text\"\n                                                    placeholder=\"Filter...\"\n                                                    value={(header.column.getFilterValue() as string) ?? \"\"}\n                                                    onClick={(e) => e.stopPropagation()} // 🛠️ This is key\n                                                    onChange={(e) => header.column.setFilterValue(e.target.value)}\n                                                    className=\"mt-2 h-8 w-full rounded-sm bg-white text-sm\"\n                                                />\n                                            )}\n                                            {enableColumnResizing && !isMobile && (\n                                                <div\n                                                    onMouseDown={header.getResizeHandler()}\n                                                    onTouchStart={header.getResizeHandler()}\n                                                    className={`absolute right-0 top-0 h-full w-1 bg-border cursor-col-resize select-none touch-none opacity-0 group-hover:opacity-100 ${header.column.getIsResizing() ? \"bg-primary opacity-100\" : \"\"}`}\n                                                />\n                                            )}\n                                        </TableHead>\n                                    );\n                                })}\n                            </TableRow>\n                        ))}\n                    </TableHeader>\n                    <TableBody>\n                        {table.getRowModel().rows.length ? (\n                            table.getRowModel().rows.map((row) => (\n                                <TableRow\n                                    key={row.id}\n                                    data-state={row.getIsSelected() && \"selected\"}\n                                    onDoubleClick={() => onRowDoubleClick?.(row.original)}\n                                    className={cn(\n                                        hoverable && \"hover:bg-muted/50\",\n                                        striped && \"even:bg-muted/10\",\n                                        row.getIsSelected() && \"bg-primary/10\"\n                                    )}\n                                >\n                                    {row.getVisibleCells().map((cell) => {\n                                        if (cell.column.id === \"__select\") {\n                                            return (\n                                                <TableCell key={cell.id} className=\"sticky left-0 z-20 bg-background w-20 min-w-[33px] max-w-[33px]\">\n                                                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                                                </TableCell>\n                                            );\n                                        }\n                                        return (\n                                            <TableCell\n                                                key={cell.id}\n                                                className={cn(cell.column.getIsPinned() && \"sticky bg-background\", \"max-w-[200px] overflow-hidden text-ellipsis\")}\n                                                style={{\n                                                    left: cell.column.getIsPinned() === \"left\" ? `${cell.column.getStart()}px` : undefined,\n                                                    right: cell.column.getIsPinned() === \"right\" ? `${cell.column.getAfter()}px` : undefined,\n                                                }}\n                                            >\n                                                <div className=\"truncate\">{flexRender(cell.column.columnDef.cell, cell.getContext())}</div>\n                                            </TableCell>\n                                        );\n                                    })}\n                                </TableRow>\n                            ))\n                        ) : (\n                            <TableRow>\n                                <TableCell colSpan={allColumns.length} className=\"h-24 text-center\">\n                                    No results.\n                                </TableCell>\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </div>\n\n            {/* Pagination ----------------------------------------------- */}\n            {\n                enablePagination && (\n                    <div className=\"flex flex-col md:flex-row justify-between items-center gap-2 p-2\">\n                        {/* Records count on the left */}\n                        <div className=\"text-sm text-muted-foreground mr-3\">\n                            <DropdownMenu>\n                                <DropdownMenuTrigger asChild>\n                                    <Button variant=\"outline\" size=\"sm\" className=\"h-8 mr-2\">\n                                        Show {table.getState().pagination.pageSize}\n                                    </Button>\n                                </DropdownMenuTrigger>\n                                <DropdownMenuContent align=\"end\">\n                                    {[10, 20, 30, 40, 50].map((size) => (\n                                        <DropdownMenuItem\n                                            key={size}\n                                            onClick={() => table.setPageSize(size)}\n                                        >\n                                            Show {size}\n                                        </DropdownMenuItem>\n                                    ))}\n                                </DropdownMenuContent>\n                            </DropdownMenu>\n                            Showing {table.getRowModel().rows.length} of{' '}\n                            {table.getFilteredRowModel().rows.length} records\n                        </div>\n\n\n                        {/* Page navigation on the right */}\n                        <div className=\"flex items-center gap-2\">\n                            <div className=\"flex items-center gap-2\">\n                                <span className=\"text-sm\">\n                                    Page {table.getState().pagination.pageIndex + 1} of{' '}\n                                    {table.getPageCount()}\n                                </span>\n                                <div className=\"flex items-center gap-2\">\n                                    <span className=\"text-sm hidden md:inline\">Go to:</span>\n                                    <Input\n                                        type=\"number\"\n                                        defaultValue={table.getState().pagination.pageIndex + 1}\n                                        onChange={(e) => {\n                                            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                                            table.setPageIndex(Math.min(Math.max(page, 0), table.getPageCount() - 1));\n                                        }}\n                                        className=\"w-16 h-8\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"flex items-center space-x-2\">\n                                <Button\n                                    variant=\"outline\"\n                                    size=\"sm\"\n                                    onClick={() => table.setPageIndex(0)}\n                                    disabled={!table.getCanPreviousPage()}\n                                    className=\"h-8 w-8 p-0\"\n                                >\n                                    <ChevronFirst className=\"h-4 w-4\" />\n                                </Button>\n                                <Button\n                                    variant=\"outline\"\n                                    size=\"sm\"\n                                    onClick={() => table.previousPage()}\n                                    disabled={!table.getCanPreviousPage()}\n                                    className=\"h-8 w-8 p-0\"\n                                >\n                                    <ChevronLeft className=\"h-4 w-4\" />\n                                </Button>\n                                <Button\n                                    variant=\"outline\"\n                                    size=\"sm\"\n                                    onClick={() => table.nextPage()}\n                                    disabled={!table.getCanNextPage()}\n                                    className=\"h-8 w-8 p-0\"\n                                >\n                                    <ChevronRight className=\"h-4 w-4\" />\n                                </Button>\n                                <Button\n                                    variant=\"outline\"\n                                    size=\"sm\"\n                                    onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n                                    disabled={!table.getCanNextPage()}\n                                    className=\"h-8 w-8 p-0\"\n                                >\n                                    <ChevronLast className=\"h-4 w-4\" />\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        </div >\n    );\n}\n\nexport default ExtendedGrid;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1245, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1342, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ext/containers/Panel.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport { Card } from '@/components/ui/card'\nimport { CardContent } from '@/components/ui/card'\nimport { cn } from '@/lib/utils'\nimport { Plus, Pencil, Trash } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\n\ninterface PanelProps {\n    title?: string\n    onCreate?: () => void\n    onEdit?: () => void\n    onDelete?: () => void\n    toolbarExtra?: React.ReactNode\n    className?: string\n    children: React.ReactNode\n}\n\nexport const Panel: React.FC<PanelProps> = ({\n    title,\n    onCreate,\n    onEdit,\n    onDelete,\n    toolbarExtra,\n    className,\n    children,\n}) => {\n    return (\n        <Card className={cn('grid grid-cols-1 gap-4 p-3 h-full', className)}>\n            {/* Title */}\n            {title && (\n                <h2 className=\"text-xl font-semibold mb-1 shrink-0\">{title}</h2>\n            )}\n\n            {/* Tbar */}\n            <div className=\"flex items-center gap-3\">\n                <Button\n                    size=\"sm\"\n                    variant=\"secondary\"\n                    onClick={onCreate}\n                    disabled={!onCreate}\n                    className=\"flex gap-1\"\n                >\n                    <Plus className=\"h-4 w-4\" />\n                    <span className=\"hidden sm:inline\">Create</span>\n                </Button>\n                <Button\n                    size=\"sm\"\n                    variant=\"secondary\"\n                    onClick={onEdit}\n                    disabled={!onEdit}\n                    className=\"flex gap-1\"\n                >\n                    <Pencil className=\"h-4 w-4\" />\n                    <span className=\"hidden sm:inline\">Edit</span>\n                </Button>\n                <Button\n                    size=\"sm\"\n                    variant=\"destructive\"\n                    onClick={onDelete}\n                    disabled={!onDelete}\n                    className=\"flex gap-1\"\n                >\n                    <Trash className=\"h-4 w-4\" />\n                    <span className=\"hidden sm:inline\">Delete</span>\n                </Button>\n\n                {/* Right-aligned optional controls */}\n                {toolbarExtra && (\n                    <div className=\"ml-auto flex items-center gap-2\">\n                        {toolbarExtra}\n                    </div>\n                )}\n            </div>\n\n            {/* Scrollable Content */}\n            <CardContent className=\"min-h-0 overflow-auto p-0 flex-1\">\n                {children}\n            </CardContent>\n        </Card >\n    )\n}\n"],"names":[],"mappings":";;;;AAGA;AAEA;AACA;AAAA;AAAA;AACA;AAPA;;;;;;;AAmBO,MAAM,QAA8B,CAAC,EACxC,KAAK,EACL,QAAQ,EACR,MAAM,EACN,QAAQ,EACR,YAAY,EACZ,SAAS,EACT,QAAQ,EACX;IACG,qBACI,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;;YAEpD,uBACG,8OAAC;gBAAG,WAAU;0BAAuC;;;;;;0BAIzD,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,kIAAA,CAAA,SAAM;wBACH,MAAK;wBACL,SAAQ;wBACR,SAAS;wBACT,UAAU,CAAC;wBACX,WAAU;;0CAEV,8OAAC,kMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;0CAChB,8OAAC;gCAAK,WAAU;0CAAmB;;;;;;;;;;;;kCAEvC,8OAAC,kIAAA,CAAA,SAAM;wBACH,MAAK;wBACL,SAAQ;wBACR,SAAS;wBACT,UAAU,CAAC;wBACX,WAAU;;0CAEV,8OAAC,sMAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;0CAClB,8OAAC;gCAAK,WAAU;0CAAmB;;;;;;;;;;;;kCAEvC,8OAAC,kIAAA,CAAA,SAAM;wBACH,MAAK;wBACL,SAAQ;wBACR,SAAS;wBACT,UAAU,CAAC;wBACX,WAAU;;0CAEV,8OAAC,oMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;0CACjB,8OAAC;gCAAK,WAAU;0CAAmB;;;;;;;;;;;;oBAItC,8BACG,8OAAC;wBAAI,WAAU;kCACV;;;;;;;;;;;;0BAMb,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;0BAClB;;;;;;;;;;;;AAIjB","debugId":null}},
    {"offset": {"line": 1493, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/app/%28packages%29/deals/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport ExtendedGrid from \"@/components/ext/grid/ExtendedGrid\";\nimport { ColumnDef } from \"@tanstack/react-table\";\nimport { Panel } from \"@/components/ext/containers/Panel\";\nimport { showCustomToast, showSuccessToast } from \"@/components/ext/window/Toaster\";\n\ninterface Deal {\n    deal_number: string;\n    deal_name: string;\n    deal_type: string;\n    vendor_name: string;\n    division: string;\n    deal_status: string;\n    deal_start_date: string | null;\n    deal_end_date: string | null;\n    category_manager: string;\n    last_update_date: string;\n    currency: string;\n    created_by: string;\n}\n\nexport default function DealSummaryPage() {\n    const [data, setData] = useState<Deal[]>([]);\n\n    const columns: ColumnDef<Deal>[] = [\n        { accessorKey: \"deal_number\", header: \"Deal #\" },\n        { accessorKey: \"deal_name\", header: \"Deal Name\" },\n        { accessorKey: \"deal_type\", header: \"Type\" },\n        { accessorKey: \"vendor_name\", header: \"Vendor\" },\n        { accessorKey: \"division\", header: \"Division\" },\n        { accessorKey: \"deal_status\", header: \"Status\" },\n        { accessorKey: \"deal_start_date\", header: \"Start Date\" },\n        { accessorKey: \"deal_end_date\", header: \"End Date\" },\n        { accessorKey: \"category_manager\", header: \"Manager\" },\n        { accessorKey: \"last_update_date\", header: \"Last Updated\" },\n        { accessorKey: \"currency\", header: \"Currency\" },\n        { accessorKey: \"created_by\", header: \"Created By\" },\n    ];\n\n    useEffect(() => {\n        fetch(\"/data/Deals/DealHeaders.json\")\n            .then((res) => res.json())\n            .then((json) => setData(json.data));\n    }, []);\n\n    return (\n        <Panel\n            title=\"Deal Summary\"\n            onCreate={() => console.log(\"Create\")}\n            onEdit={() => console.log(\"Edit\")}\n            onDelete={() => console.log(\"Delete\")}\n            className=\"grid grid-cols-1 gap-4 p-3 h-full\"\n        >\n            <ExtendedGrid\n                columns={columns}\n                data={data}\n                enableFilters={false}\n                onRefresh={() => showCustomToast(\"info\", \"Info\", \"Refreshed data\")}\n            />\n        </Panel>\n    );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAuBe,SAAS;IACpB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAE3C,MAAM,UAA6B;QAC/B;YAAE,aAAa;YAAe,QAAQ;QAAS;QAC/C;YAAE,aAAa;YAAa,QAAQ;QAAY;QAChD;YAAE,aAAa;YAAa,QAAQ;QAAO;QAC3C;YAAE,aAAa;YAAe,QAAQ;QAAS;QAC/C;YAAE,aAAa;YAAY,QAAQ;QAAW;QAC9C;YAAE,aAAa;YAAe,QAAQ;QAAS;QAC/C;YAAE,aAAa;YAAmB,QAAQ;QAAa;QACvD;YAAE,aAAa;YAAiB,QAAQ;QAAW;QACnD;YAAE,aAAa;YAAoB,QAAQ;QAAU;QACrD;YAAE,aAAa;YAAoB,QAAQ;QAAe;QAC1D;YAAE,aAAa;YAAY,QAAQ;QAAW;QAC9C;YAAE,aAAa;YAAc,QAAQ;QAAa;KACrD;IAED,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,gCACD,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC,OAAS,QAAQ,KAAK,IAAI;IACzC,GAAG,EAAE;IAEL,qBACI,8OAAC,gJAAA,CAAA,QAAK;QACF,OAAM;QACN,UAAU,IAAM,QAAQ,GAAG,CAAC;QAC5B,QAAQ,IAAM,QAAQ,GAAG,CAAC;QAC1B,UAAU,IAAM,QAAQ,GAAG,CAAC;QAC5B,WAAU;kBAEV,cAAA,8OAAC,iJAAA,CAAA,UAAY;YACT,SAAS;YACT,MAAM;YACN,eAAe;YACf,WAAW,IAAM,CAAA,GAAA,8IAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,QAAQ;;;;;;;;;;;AAIjE","debugId":null}}]
}