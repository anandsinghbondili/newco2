{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,8OAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACiD;IACpD,qBACE,8OAAC,oKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+eACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;sBAEV,cAAA,8OAAC,wMAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI7B","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/app/hooks/use-media-query.ts"],"sourcesContent":["// hooks/use-media-query.ts\n\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport function useMediaQuery(query: string): boolean {\n    const [matches, setMatches] = useState(false);\n\n    useEffect(() => {\n        const media = window.matchMedia(query);\n        if (media.matches !== matches) {\n            setMatches(media.matches);\n        }\n        const listener = () => setMatches(media.matches);\n        media.addListener(listener);\n        return () => media.removeListener(listener);\n    }, [matches, query]);\n\n    return matches;\n}"],"names":[],"mappings":"AAAA,2BAA2B;;;;AAG3B;AAFA;;AAIO,SAAS,cAAc,KAAa;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,QAAQ,OAAO,UAAU,CAAC;QAChC,IAAI,MAAM,OAAO,KAAK,SAAS;YAC3B,WAAW,MAAM,OAAO;QAC5B;QACA,MAAM,WAAW,IAAM,WAAW,MAAM,OAAO;QAC/C,MAAM,WAAW,CAAC;QAClB,OAAO,IAAM,MAAM,cAAc,CAAC;IACtC,GAAG;QAAC;QAAS;KAAM;IAEnB,OAAO;AACX","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ext/grid/ExtendedGrid.tsx"],"sourcesContent":["// components/ext/grid/ExtendedGrid.tsx\n// ShadCN‑powered DataTable with TanStack Table v8 + a locked checkbox‑selection column.\n\n\"use client\";\n\nimport * as React from \"react\";\nimport {\n    ColumnDef,\n    flexRender,\n    getCoreRowModel,\n    getPaginationRowModel,\n    getSortedRowModel,\n    useReactTable,\n    getFilteredRowModel,\n    ColumnResizeMode,\n    ColumnOrderState,\n    ColumnPinningState,\n    VisibilityState,\n} from \"@tanstack/react-table\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableHeader,\n    TableRow,\n} from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n    Download,\n    ArrowDown,\n    ArrowUp,\n    ChevronFirst,\n    ChevronLast,\n    ChevronLeft,\n    ChevronRight,\n    Columns,\n    Filter,\n    GripVertical,\n    List,\n    MoreVertical,\n    Settings,\n    Menu,\n    RefreshCcw,\n} from \"lucide-react\";\nimport * as XLSX from \"xlsx\";\nimport {\n    DropdownMenu,\n    DropdownMenuCheckboxItem,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuLabel,\n    DropdownMenuSeparator,\n    DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { cn } from \"@/lib/utils\";\nimport { useMediaQuery } from \"@/app/hooks/use-media-query\";\n\ninterface ExtendedGridProps<T> {\n    columns: ColumnDef<T, unknown>[];\n    data: T[];\n    title?: string;\n    pageSize?: number;\n    enableColumnResizing?: boolean;\n    enableColumnReordering?: boolean;\n    enableColumnPinning?: boolean;\n    enableRowSelection?: boolean;\n    enableMultiRowSelection?: boolean;\n    enablePagination?: boolean;\n    enableExport?: boolean;\n    enableFilters?: boolean;\n    enableSorting?: boolean;\n    striped?: boolean;\n    bordered?: boolean;\n    hoverable?: boolean;\n    height?: string;\n    width?: string;\n    className?: string;\n    onRowDoubleClick?: (record: T) => void;\n    onRefresh?: () => void;\n}\n\nexport function ExtendedGrid<T>({\n    columns,\n    data,\n    title = \"\",\n    pageSize = 10,\n    enableColumnResizing = true,\n    enableColumnReordering = true,\n    enableColumnPinning = true,\n    enableRowSelection = true,\n    enableMultiRowSelection = true,\n    enablePagination = true,\n    enableExport = true,\n    enableFilters = true,\n    enableSorting = true,\n    striped = true,\n    bordered = true,\n    hoverable = true,\n    height = \"100%\",\n    width = \"100%\",\n    className = \"\",\n    onRowDoubleClick,\n    onRefresh,\n}: ExtendedGridProps<T>) {\n    const isMobile = useMediaQuery(\"(max-width: 768px)\");\n\n    /* ------------------------------------------------------------------ */\n    /* Selection column (always visible + pinned left)                     */\n    /* ------------------------------------------------------------------ */\n    const selectionColumn: ColumnDef<T, unknown> = {\n        id: \"__select\",\n        size: 60,\n        header: ({ table }) => (\n            <Checkbox\n                checked={table.getIsAllRowsSelected()}\n                onCheckedChange={(v) => table.toggleAllRowsSelected(!!v)}\n                aria-label=\"Select all\"\n                className=\"translate-y-[2px]\"\n            />\n        ),\n        cell: ({ row }) => (\n            <Checkbox\n                checked={row.getIsSelected()}\n                onCheckedChange={(v) => row.toggleSelected(!!v)}\n                aria-label=\"Select row\"\n                className=\"translate-y-[2px]\"\n            />\n        ),\n        enableHiding: false,\n        enableResizing: false,\n        meta: { isSelection: true },\n    };\n\n    const allColumns = React.useMemo(() => [selectionColumn, ...columns], [columns]);\n\n    /* ------------------------------------------------------------------ */\n    /* States                                                             */\n    /* ------------------------------------------------------------------ */\n    const [sorting, setSorting] = React.useState<import(\"@tanstack/react-table\").SortingState>([]);\n    const [columnFilters, setColumnFilters] = React.useState<import(\"@tanstack/react-table\").ColumnFiltersState>([]);\n    const [rowSelection, setRowSelection] = React.useState<import(\"@tanstack/react-table\").RowSelectionState>({});\n    const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({ __select: true });\n    const [columnOrder, setColumnOrder] = React.useState<ColumnOrderState>([]);\n    const [columnPinning, setColumnPinning] = React.useState<ColumnPinningState>({ left: [\"__select\"] });\n    const [columnResizeMode, setColumnResizeMode] = React.useState<ColumnResizeMode>(\"onChange\");\n    const [globalFilter, setGlobalFilter] = React.useState(\"\");\n\n    // keep columnOrder synced with columns prop changes\n    React.useEffect(() => {\n        setColumnOrder(\n            allColumns.map((c, i) => (c.id ? c.id.toString() : `col${i}`)) as ColumnOrderState\n        );\n    }, [allColumns]);\n\n    // Responsive visibility (never hide selection column)\n    React.useEffect(() => {\n        if (isMobile) {\n            const mobileVisible: VisibilityState = { __select: true };\n            columns.forEach((col, i) => {\n                if (i < 2) mobileVisible[col.id as string] = true;\n            });\n            setColumnVisibility(mobileVisible);\n        } else {\n            const vis: VisibilityState = { __select: true };\n            columns.forEach((col) => {\n                vis[col.id as string] = true;\n            });\n            setColumnVisibility(vis);\n        }\n    }, [isMobile, columns]);\n\n    const table = useReactTable({\n        data,\n        columns: allColumns,\n        state: {\n            sorting,\n            columnFilters,\n            rowSelection,\n            columnVisibility,\n            columnOrder,\n            columnPinning,\n            globalFilter,\n        },\n        onSortingChange: enableSorting ? setSorting : undefined,\n        onColumnFiltersChange: enableFilters ? setColumnFilters : undefined,\n        onRowSelectionChange: enableRowSelection ? setRowSelection : undefined,\n        onColumnVisibilityChange: setColumnVisibility,\n        onColumnOrderChange: setColumnOrder,\n        onColumnPinningChange: setColumnPinning,\n        onGlobalFilterChange: setGlobalFilter,\n        getCoreRowModel: getCoreRowModel(),\n        getSortedRowModel: enableSorting ? getSortedRowModel() : undefined,\n        getPaginationRowModel: enablePagination ? getPaginationRowModel() : undefined,\n        getFilteredRowModel: enableFilters ? getFilteredRowModel() : undefined,\n        enableRowSelection,\n        enableMultiRowSelection,\n        columnResizeMode,\n    });\n\n    React.useEffect(() => {\n        table.setPageSize(pageSize);\n    }, [pageSize, table]);\n\n    /* Pin selection column left always */\n    React.useEffect(() => {\n        if (enableRowSelection) {\n            table.getColumn(\"__select\")?.pin(\"left\");\n        }\n    }, [table, enableRowSelection]);\n\n    /* ------------------------------------------------------------------ */\n    /* Export helpers                                                     */\n    /* ------------------------------------------------------------------ */\n    const exportToExcel = () => {\n        const exportData = table.getFilteredRowModel().rows.map((r) => r.original);\n        const ws = XLSX.utils.json_to_sheet(exportData);\n        const wb = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\n        XLSX.writeFile(wb, `${title || \"data\"}.xlsx`);\n    };\n\n    const resetFilters = () => {\n        table.resetColumnFilters();\n        setGlobalFilter(\"\");\n    };\n    const resetSorting = () => table.resetSorting();\n    const resetAll = () => {\n        resetFilters();\n        resetSorting();\n        table.resetColumnOrder();\n        table.resetColumnVisibility();\n        table.resetColumnPinning();\n    };\n\n    /* ------------------------------------------------------------------ */\n    /* UI                                                                 */\n    /* ------------------------------------------------------------------ */\n    return (\n        <div className={cn(\"flex flex-col h-full w-full\", className)} style={{ width, height }}>\n            {/* Header ------------------------------------------------------ */}\n            <div className=\"flex flex-col md:flex-row md:items-center justify-between gap-2 p-2\">\n                <h2 className=\"text-lg md:text-xl font-semibold truncate\">{title}</h2>\n\n                <div className=\"flex flex-wrap gap-2\">\n                    {/* Search */}\n                    {enableFilters && (\n                        <div className=\"relative flex-1 min-w-[150px] max-w-[300px]\">\n                            <Input\n                                placeholder=\"Search...\"\n                                value={globalFilter ?? \"\"}\n                                onChange={(e) => setGlobalFilter(e.target.value)}\n                                className=\"h-8 w-full\"\n                            />\n                            <Filter className=\"absolute right-2 top-2 h-4 w-4 text-muted-foreground\" />\n                        </div>\n                    )}\n\n                    {/* Add this refresh button */}\n                    {onRefresh && (\n                        <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={onRefresh}\n                            className=\"h-8\"\n                        >\n                            {isMobile ? (\n                                <RefreshCcw className=\"h-4 w-4\" />\n                            ) : (\n                                <>\n                                    <RefreshCcw className=\"h-4 w-4 mr-2\" />\n                                    Refresh\n                                </>\n                            )}\n                        </Button>\n                    )}\n\n                    {/* Settings menu */}\n                    <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                            <Button variant=\"outline\" size=\"sm\" className=\"h-8\">\n                                {isMobile ? <Menu className=\"h-4 w-4\" /> : (<><Settings className=\"h-4 w-4 mr-2\" />Settings</>)}\n                            </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\" className=\"w-[200px]\">\n                            <DropdownMenuLabel>Table Options</DropdownMenuLabel>\n                            <DropdownMenuSeparator />\n                            {!isMobile && (\n                                <>\n                                    <DropdownMenuCheckboxItem\n                                        checked={enableColumnResizing}\n                                        onCheckedChange={(v) => setColumnResizeMode(v ? \"onChange\" : \"onEnd\")}\n                                    >Column Resizing</DropdownMenuCheckboxItem>\n                                    <DropdownMenuCheckboxItem disabled={!enableColumnReordering}>Column Reordering</DropdownMenuCheckboxItem>\n                                    <DropdownMenuCheckboxItem disabled={!enableColumnPinning}>Column Pinning</DropdownMenuCheckboxItem>\n                                    <DropdownMenuSeparator />\n                                </>\n                            )}\n                            <DropdownMenuItem onClick={resetFilters}>Reset Filters</DropdownMenuItem>\n                            <DropdownMenuItem onClick={resetSorting}>Reset Sorting</DropdownMenuItem>\n                            <DropdownMenuItem onClick={resetAll}>Reset All</DropdownMenuItem>\n                        </DropdownMenuContent>\n                    </DropdownMenu>\n\n                    {/* Column visibility */}\n                    <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                            <Button variant=\"outline\" size=\"sm\" className=\"h-8\">\n                                {isMobile ? <Columns className=\"h-4 w-4\" /> : (<><Columns className=\"h-4 w-4 mr-2\" />Columns</>)}\n                            </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\">\n                            {table.getAllColumns().filter((c) => c.getCanHide()).map((col) => (\n                                <DropdownMenuCheckboxItem key={col.id} checked={col.getIsVisible()} onCheckedChange={(v) => col.toggleVisibility(!!v)}>\n                                    {col.id}\n                                </DropdownMenuCheckboxItem>\n                            ))}\n                        </DropdownMenuContent>\n                    </DropdownMenu>\n\n                    {enableExport && (\n                        <Button variant=\"outline\" size=\"sm\" onClick={exportToExcel} className=\"h-8\">\n                            {isMobile ? <Download className=\"h-4 w-4\" /> : (<><Download className=\"h-4 w-4 mr-2\" />Export</>)}\n                        </Button>\n                    )}\n                </div>\n            </div>\n\n            {/* Table wrapper ---------------------------------------------- */}\n            <div\n                className={cn(\n                    \"flex-1 min-h-0 overflow-auto border rounded-lg relative\",\n                    bordered && \"border\",\n                    striped && \"[&_tr:nth-child(even)]:bg-muted/10\",\n                    hoverable && \"[&_tr:hover]:bg-muted/50\"\n                )}\n            >\n                <Table className=\"w-full\">\n                    <TableHeader className=\"sticky top-0 bg-background z-10 shadow-sm border-b\">\n                        {table.getHeaderGroups().map((hg) => (\n                            <TableRow key={hg.id}>\n                                {hg.headers.map((header) => {\n                                    const canSort = enableSorting && header.column.getCanSort();\n                                    const sortDir = header.column.getIsSorted();\n\n                                    // Selection column gets fixed styles\n                                    if (header.column.id === \"__select\") {\n                                        return (\n                                            <TableHead key={header.id} className=\"sticky left-0 z-20 bg-background w-20 min-w-[33px] max-w-[33px]\">\n                                                {flexRender(header.column.columnDef.header, header.getContext())}\n                                            </TableHead>\n                                        );\n                                    }\n\n                                    return (\n                                        <TableHead\n                                            key={header.id}\n                                            onClick={canSort ? header.column.getToggleSortingHandler() : undefined}\n                                            className={cn(\n                                                \"relative group px-3 py-2\", // 📦 padding\n                                                \"bg-muted/30\",              // 💡 slight background\n                                                \"text-xs font-semibold uppercase\", // 🧑‍🎓 clearer header text\n                                                canSort && \"cursor-pointer\",\n                                                header.column.getIsPinned() && \"sticky bg-background\",\n                                                isMobile && \"min-w-[120px]\"\n                                            )}\n                                            style={{\n                                                width: header.getSize(),\n                                                left: header.column.getIsPinned() === \"left\" ? `${header.getStart()}px` : undefined,\n                                                right: header.column.getIsPinned() === \"right\" ? `${header.getLeafHeaders()[0].getSize()}px` : undefined,\n                                            }}\n                                        >\n                                            <div className=\"flex items-center justify-between\">\n                                                <div className=\"flex items-center gap-1 truncate\">\n                                                    {!isMobile && enableColumnReordering && (\n                                                        <GripVertical className=\"w-3 h-3 mr-1 text-muted-foreground cursor-grab\" />\n                                                    )}\n                                                    <span className=\"truncate\">\n                                                        {flexRender(header.column.columnDef.header, header.getContext())}\n                                                    </span>\n                                                    {canSort && sortDir === \"asc\" && <ArrowUp className=\"w-3 h-3 ml-1\" />}\n                                                    {canSort && sortDir === \"desc\" && <ArrowDown className=\"w-3 h-3 ml-1\" />}\n                                                </div>\n                                                {!isMobile && (\n                                                    <DropdownMenu>\n                                                        <DropdownMenuTrigger asChild>\n                                                            <Button variant=\"ghost\" size=\"sm\" className=\"h-4 w-4 p-0\"><MoreVertical className=\"h-3 w-3\" /></Button>\n                                                        </DropdownMenuTrigger>\n                                                        <DropdownMenuContent align=\"end\">\n                                                            {enableSorting && (\n                                                                <>\n                                                                    <DropdownMenuItem onClick={() => header.column.toggleSorting(false)}><ArrowUp className=\"mr-2 h-3.5 w-3.5\" />Sort Ascending</DropdownMenuItem>\n                                                                    <DropdownMenuItem onClick={() => header.column.toggleSorting(true)}><ArrowDown className=\"mr-2 h-3.5 w-3.5\" />Sort Descending</DropdownMenuItem>\n                                                                    <DropdownMenuItem onClick={() => header.column.clearSorting()} disabled={!header.column.getIsSorted()}><List className=\"mr-2 h-3.5 w-3.5\" />Clear Sort</DropdownMenuItem>\n                                                                    <DropdownMenuSeparator />\n                                                                </>\n                                                            )}\n                                                            {enableColumnPinning && (\n                                                                <>\n                                                                    <DropdownMenuItem onClick={() => header.column.pin(\"left\")} disabled={header.column.getIsPinned() === \"left\"}>Pin Left</DropdownMenuItem>\n                                                                    <DropdownMenuItem onClick={() => header.column.pin(\"right\")} disabled={header.column.getIsPinned() === \"right\"}>Pin Right</DropdownMenuItem>\n                                                                    <DropdownMenuItem onClick={() => header.column.pin(false)} disabled={!header.column.getIsPinned()}>Unpin</DropdownMenuItem>\n                                                                    <DropdownMenuSeparator />\n                                                                </>\n                                                            )}\n                                                            <DropdownMenuItem onClick={() => header.column.toggleVisibility(false)}>Hide Column</DropdownMenuItem>\n                                                        </DropdownMenuContent>\n                                                    </DropdownMenu>\n                                                )}\n                                            </div>\n                                            {enableFilters && header.column.getCanFilter() && !isMobile && (\n                                                <Input\n                                                    type=\"text\"\n                                                    placeholder=\"Filter...\"\n                                                    value={(header.column.getFilterValue() as string) ?? \"\"}\n                                                    onClick={(e) => e.stopPropagation()} // 🛠️ This is key\n                                                    onChange={(e) => header.column.setFilterValue(e.target.value)}\n                                                    className=\"mt-2 h-8 w-full rounded-sm bg-white text-sm\"\n                                                />\n                                            )}\n                                            {enableColumnResizing && !isMobile && (\n                                                <div\n                                                    onMouseDown={header.getResizeHandler()}\n                                                    onTouchStart={header.getResizeHandler()}\n                                                    className={`absolute right-0 top-0 h-full w-1 bg-border cursor-col-resize select-none touch-none opacity-0 group-hover:opacity-100 ${header.column.getIsResizing() ? \"bg-primary opacity-100\" : \"\"}`}\n                                                />\n                                            )}\n                                        </TableHead>\n                                    );\n                                })}\n                            </TableRow>\n                        ))}\n                    </TableHeader>\n                    <TableBody>\n                        {table.getRowModel().rows.length ? (\n                            table.getRowModel().rows.map((row) => (\n                                <TableRow\n                                    key={row.id}\n                                    data-state={row.getIsSelected() && \"selected\"}\n                                    onDoubleClick={() => onRowDoubleClick?.(row.original)}\n                                    className={cn(\n                                        hoverable && \"hover:bg-muted/50\",\n                                        striped && \"even:bg-muted/10\",\n                                        row.getIsSelected() && \"bg-primary/10\"\n                                    )}\n                                >\n                                    {row.getVisibleCells().map((cell) => {\n                                        if (cell.column.id === \"__select\") {\n                                            return (\n                                                <TableCell key={cell.id} className=\"sticky left-0 z-20 bg-background w-20 min-w-[33px] max-w-[33px]\">\n                                                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                                                </TableCell>\n                                            );\n                                        }\n                                        return (\n                                            <TableCell\n                                                key={cell.id}\n                                                className={cn(cell.column.getIsPinned() && \"sticky bg-background\", \"max-w-[200px] overflow-hidden text-ellipsis\")}\n                                                style={{\n                                                    left: cell.column.getIsPinned() === \"left\" ? `${cell.column.getStart()}px` : undefined,\n                                                    right: cell.column.getIsPinned() === \"right\" ? `${cell.column.getAfter()}px` : undefined,\n                                                }}\n                                            >\n                                                <div className=\"truncate\">{flexRender(cell.column.columnDef.cell, cell.getContext())}</div>\n                                            </TableCell>\n                                        );\n                                    })}\n                                </TableRow>\n                            ))\n                        ) : (\n                            <TableRow>\n                                <TableCell colSpan={allColumns.length} className=\"h-24 text-center\">\n                                    No results.\n                                </TableCell>\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </div>\n\n            {/* Pagination ----------------------------------------------- */}\n            {\n                enablePagination && (\n                    <div className=\"flex flex-col md:flex-row justify-between items-center gap-2 p-2\">\n                        {/* Records count on the left */}\n                        <div className=\"text-sm text-muted-foreground mr-3\">\n                            <DropdownMenu>\n                                <DropdownMenuTrigger asChild>\n                                    <Button variant=\"outline\" size=\"sm\" className=\"h-8 mr-2\">\n                                        Show {table.getState().pagination.pageSize}\n                                    </Button>\n                                </DropdownMenuTrigger>\n                                <DropdownMenuContent align=\"end\">\n                                    {[10, 20, 30, 40, 50].map((size) => (\n                                        <DropdownMenuItem\n                                            key={size}\n                                            onClick={() => table.setPageSize(size)}\n                                        >\n                                            Show {size}\n                                        </DropdownMenuItem>\n                                    ))}\n                                </DropdownMenuContent>\n                            </DropdownMenu>\n                            Showing {table.getRowModel().rows.length} of{' '}\n                            {table.getFilteredRowModel().rows.length} records\n                        </div>\n\n\n                        {/* Page navigation on the right */}\n                        <div className=\"flex items-center gap-2\">\n                            <div className=\"flex items-center gap-2\">\n                                <span className=\"text-sm\">\n                                    Page {table.getState().pagination.pageIndex + 1} of{' '}\n                                    {table.getPageCount()}\n                                </span>\n                                <div className=\"flex items-center gap-2\">\n                                    <span className=\"text-sm hidden md:inline\">Go to:</span>\n                                    <Input\n                                        type=\"number\"\n                                        defaultValue={table.getState().pagination.pageIndex + 1}\n                                        onChange={(e) => {\n                                            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                                            table.setPageIndex(Math.min(Math.max(page, 0), table.getPageCount() - 1));\n                                        }}\n                                        className=\"w-16 h-8\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"flex items-center space-x-2\">\n                                <Button\n                                    variant=\"outline\"\n                                    size=\"sm\"\n                                    onClick={() => table.setPageIndex(0)}\n                                    disabled={!table.getCanPreviousPage()}\n                                    className=\"h-8 w-8 p-0\"\n                                >\n                                    <ChevronFirst className=\"h-4 w-4\" />\n                                </Button>\n                                <Button\n                                    variant=\"outline\"\n                                    size=\"sm\"\n                                    onClick={() => table.previousPage()}\n                                    disabled={!table.getCanPreviousPage()}\n                                    className=\"h-8 w-8 p-0\"\n                                >\n                                    <ChevronLeft className=\"h-4 w-4\" />\n                                </Button>\n                                <Button\n                                    variant=\"outline\"\n                                    size=\"sm\"\n                                    onClick={() => table.nextPage()}\n                                    disabled={!table.getCanNextPage()}\n                                    className=\"h-8 w-8 p-0\"\n                                >\n                                    <ChevronRight className=\"h-4 w-4\" />\n                                </Button>\n                                <Button\n                                    variant=\"outline\"\n                                    size=\"sm\"\n                                    onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n                                    disabled={!table.getCanNextPage()}\n                                    className=\"h-8 w-8 p-0\"\n                                >\n                                    <ChevronLast className=\"h-4 w-4\" />\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        </div >\n    );\n}\n\nexport default ExtendedGrid;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1245, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/app/%28packages%29/%28appsettings%29/divisions/DivisionGrid.tsx"],"sourcesContent":["\"use client\";\n\nimport ExtendedGrid from \"@/components/ext/grid/ExtendedGrid\";\nimport { ColumnDef } from \"@tanstack/react-table\";\nimport DivisionsPage from \"./page\";\n\n/** Shape of one record in Divisions.json */\nexport interface DivisionRow {\n    id: number;\n    name: string;\n    division_code: string;\n    division_type: string;\n    ledger: string;\n    start_date: string | null;\n    end_date: string | null;\n    operating_unit: string;\n    legal_entity: string;\n    active_flag: boolean;\n}\n\n/* 10 hand‑picked columns */\nconst cols: ColumnDef<DivisionRow>[] = [\n    { accessorKey: \"division_code\", header: \"Code\" },\n    { accessorKey: \"name\", header: \"Division\" },\n    { accessorKey: \"division_type\", header: \"Type\" },\n    { accessorKey: \"ledger\", header: \"Ledger\" },\n    { accessorKey: \"start_date\", header: \"Start\" },\n    { accessorKey: \"end_date\", header: \"End\" },\n    { accessorKey: \"operating_unit\", header: \"Op Unit\" },\n    { accessorKey: \"legal_entity\", header: \"Legal Entity\" },\n    {\n        accessorKey: \"active_flag\", header: \"Active\",\n        cell: ({ getValue }) => (getValue<boolean>() ? \"Yes\" : \"No\")\n    },\n    { accessorKey: \"id\", header: \"ID\" },\n];\n\nexport default function DivisionGrid({\n    data,\n    onRowSelect,\n}: {\n    data: DivisionRow[];\n    onRowSelect: (id: number | null) => void;\n}) {\n    return (\n        <ExtendedGrid\n            title=\"Divisions\"\n            columns={cols}\n            data={data}\n            enableRowSelection\n            className=\"h-full\"\n            /* TanStack Table gives us a rowSelection state callback */\n            onRowSelectionChange={(state) => {\n                const first = Object.keys(state ?? {})[0];\n                onRowSelect(first ? Number(first.split(\"_\")[0]) : null);\n            }}\n            onRefresh={() => {\n                DivisionsPage.fetchData(); // Fixed typo in variable name\n            }}\n        />\n    );\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;AAoBA,0BAA0B,GAC1B,MAAM,OAAiC;IACnC;QAAE,aAAa;QAAiB,QAAQ;IAAO;IAC/C;QAAE,aAAa;QAAQ,QAAQ;IAAW;IAC1C;QAAE,aAAa;QAAiB,QAAQ;IAAO;IAC/C;QAAE,aAAa;QAAU,QAAQ;IAAS;IAC1C;QAAE,aAAa;QAAc,QAAQ;IAAQ;IAC7C;QAAE,aAAa;QAAY,QAAQ;IAAM;IACzC;QAAE,aAAa;QAAkB,QAAQ;IAAU;IACnD;QAAE,aAAa;QAAgB,QAAQ;IAAe;IACtD;QACI,aAAa;QAAe,QAAQ;QACpC,MAAM,CAAC,EAAE,QAAQ,EAAE,GAAM,aAAsB,QAAQ;IAC3D;IACA;QAAE,aAAa;QAAM,QAAQ;IAAK;CACrC;AAEc,SAAS,aAAa,EACjC,IAAI,EACJ,WAAW,EAId;IACG,qBACI,8OAAC,iJAAA,CAAA,UAAY;QACT,OAAM;QACN,SAAS;QACT,MAAM;QACN,kBAAkB;QAClB,WAAU;QACV,yDAAyD,GACzD,sBAAsB,CAAC;YACnB,MAAM,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;YACzC,YAAY,QAAQ,OAAO,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI;QACtD;QACA,WAAW;YACP,mKAAA,CAAA,UAAa,CAAC,SAAS,IAAI,8BAA8B;QAC7D;;;;;;AAGZ","debugId":null}},
    {"offset": {"line": 1324, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/app/%28packages%29/%28appsettings%29/divisions/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { z } from \"zod\";\nimport { revalidatePath } from \"next/cache\";\n\nconst schema = z.object({\n    division_id: z.number().optional(),\n    division_code: z.string().min(1),\n    division: z.string().min(1),\n    vendor_name: z.string().optional(),\n    organization_name: z.string().optional(),\n});\n\ntype Payload = z.infer<typeof schema>;\nconst API = process.env.API_BASE_URL!;           // e.g. http://localhost:8000/api\n\nasync function api(url: string, init: RequestInit = {}) {\n    const r = await fetch(url, { ...init, headers: { \"Content-Type\": \"application/json\" }, cache: \"no-store\" });\n    if (!r.ok) throw new Error(await r.text());\n}\n\nexport async function createDivision(p: Payload) {\n    await api(`${API}/divisions`, { method: \"POST\", body: JSON.stringify(schema.parse(p)) });\n    revalidatePath(\"/divisions\");\n}\n\nexport async function editDivision(id: number, p: Payload) {\n    await api(`${API}/divisions/${id}`, { method: \"PUT\", body: JSON.stringify(schema.parse(p)) });\n    revalidatePath(\"/divisions\");\n}\n\nexport async function deleteDivision(id: number) {\n    await api(`${API}/divisions/${id}`, { method: \"DELETE\" });\n    revalidatePath(\"/divisions\");\n}\n"],"names":[],"mappings":";;;;;;IA+BsB,iBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1337, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1434, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ext/containers/Panel.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport { Card } from '@/components/ui/card'\nimport { CardContent } from '@/components/ui/card'\nimport { cn } from '@/lib/utils'\nimport { Plus, Pencil, Trash } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\n\ninterface PanelProps {\n    title?: string\n    onCreate?: () => void\n    onEdit?: () => void\n    onDelete?: () => void\n    toolbarExtra?: React.ReactNode\n    className?: string\n    children: React.ReactNode\n}\n\nexport const Panel: React.FC<PanelProps> = ({\n    title,\n    onCreate,\n    onEdit,\n    onDelete,\n    toolbarExtra,\n    className,\n    children,\n}) => {\n    return (\n        <Card className={cn('grid grid-cols-1 gap-4 p-3 h-full', className)}>\n            {/* Title */}\n            {title && (\n                <h2 className=\"text-xl font-semibold mb-1 shrink-0\">{title}</h2>\n            )}\n\n            {/* Tbar */}\n            <div className=\"flex items-center gap-3\">\n                <Button\n                    size=\"sm\"\n                    variant=\"secondary\"\n                    onClick={onCreate}\n                    disabled={!onCreate}\n                    className=\"flex gap-1\"\n                >\n                    <Plus className=\"h-4 w-4\" />\n                    <span className=\"hidden sm:inline\">Create</span>\n                </Button>\n                <Button\n                    size=\"sm\"\n                    variant=\"secondary\"\n                    onClick={onEdit}\n                    disabled={!onEdit}\n                    className=\"flex gap-1\"\n                >\n                    <Pencil className=\"h-4 w-4\" />\n                    <span className=\"hidden sm:inline\">Edit</span>\n                </Button>\n                <Button\n                    size=\"sm\"\n                    variant=\"destructive\"\n                    onClick={onDelete}\n                    disabled={!onDelete}\n                    className=\"flex gap-1\"\n                >\n                    <Trash className=\"h-4 w-4\" />\n                    <span className=\"hidden sm:inline\">Delete</span>\n                </Button>\n\n                {/* Right-aligned optional controls */}\n                {toolbarExtra && (\n                    <div className=\"ml-auto flex items-center gap-2\">\n                        {toolbarExtra}\n                    </div>\n                )}\n            </div>\n\n            {/* Scrollable Content */}\n            <CardContent className=\"min-h-0 overflow-auto p-0 flex-1\">\n                {children}\n            </CardContent>\n        </Card >\n    )\n}\n"],"names":[],"mappings":";;;;AAGA;AAEA;AACA;AAAA;AAAA;AACA;AAPA;;;;;;;AAmBO,MAAM,QAA8B,CAAC,EACxC,KAAK,EACL,QAAQ,EACR,MAAM,EACN,QAAQ,EACR,YAAY,EACZ,SAAS,EACT,QAAQ,EACX;IACG,qBACI,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;;YAEpD,uBACG,8OAAC;gBAAG,WAAU;0BAAuC;;;;;;0BAIzD,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,kIAAA,CAAA,SAAM;wBACH,MAAK;wBACL,SAAQ;wBACR,SAAS;wBACT,UAAU,CAAC;wBACX,WAAU;;0CAEV,8OAAC,kMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;0CAChB,8OAAC;gCAAK,WAAU;0CAAmB;;;;;;;;;;;;kCAEvC,8OAAC,kIAAA,CAAA,SAAM;wBACH,MAAK;wBACL,SAAQ;wBACR,SAAS;wBACT,UAAU,CAAC;wBACX,WAAU;;0CAEV,8OAAC,sMAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;0CAClB,8OAAC;gCAAK,WAAU;0CAAmB;;;;;;;;;;;;kCAEvC,8OAAC,kIAAA,CAAA,SAAM;wBACH,MAAK;wBACL,SAAQ;wBACR,SAAS;wBACT,UAAU,CAAC;wBACX,WAAU;;0CAEV,8OAAC,oMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;0CACjB,8OAAC;gCAAK,WAAU;0CAAmB;;;;;;;;;;;;oBAItC,8BACG,8OAAC;wBAAI,WAAU;kCACV;;;;;;;;;;;;0BAMb,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;0BAClB;;;;;;;;;;;;AAIjB","debugId":null}},
    {"offset": {"line": 1585, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nfunction AlertDialog({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Root>) {\n  return <AlertDialogPrimitive.Root data-slot=\"alert-dialog\" {...props} />\n}\n\nfunction AlertDialogTrigger({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Trigger>) {\n  return (\n    <AlertDialogPrimitive.Trigger data-slot=\"alert-dialog-trigger\" {...props} />\n  )\n}\n\nfunction AlertDialogPortal({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Portal>) {\n  return (\n    <AlertDialogPrimitive.Portal data-slot=\"alert-dialog-portal\" {...props} />\n  )\n}\n\nfunction AlertDialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Overlay>) {\n  return (\n    <AlertDialogPrimitive.Overlay\n      data-slot=\"alert-dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Content>) {\n  return (\n    <AlertDialogPortal>\n      <AlertDialogOverlay />\n      <AlertDialogPrimitive.Content\n        data-slot=\"alert-dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      />\n    </AlertDialogPortal>\n  )\n}\n\nfunction AlertDialogHeader({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogFooter({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Title>) {\n  return (\n    <AlertDialogPrimitive.Title\n      data-slot=\"alert-dialog-title\"\n      className={cn(\"text-lg font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Description>) {\n  return (\n    <AlertDialogPrimitive.Description\n      data-slot=\"alert-dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogAction({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Action>) {\n  return (\n    <AlertDialogPrimitive.Action\n      className={cn(buttonVariants(), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogCancel({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Cancel>) {\n  return (\n    <AlertDialogPrimitive.Cancel\n      className={cn(buttonVariants({ variant: \"outline\" }), className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA;AAEA;AACA;AANA;;;;;AAQA,SAAS,YAAY,EACnB,GAAG,OACoD;IACvD,qBAAO,8OAAC,2KAAA,CAAA,OAAyB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,mBAAmB,EAC1B,GAAG,OACuD;IAC1D,qBACE,8OAAC,2KAAA,CAAA,UAA4B;QAAC,aAAU;QAAwB,GAAG,KAAK;;;;;;AAE5E;AAEA,SAAS,kBAAkB,EACzB,GAAG,OACsD;IACzD,qBACE,8OAAC,2KAAA,CAAA,SAA2B;QAAC,aAAU;QAAuB,GAAG,KAAK;;;;;;AAE1E;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,8OAAC,2KAAA,CAAA,UAA4B;QAC3B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,2KAAA,CAAA,UAA4B;gBAC3B,aAAU;gBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIjB;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACqD;IACxD,qBACE,8OAAC,2KAAA,CAAA,QAA0B;QACzB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,8OAAC,2KAAA,CAAA,cAAgC;QAC/B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,2KAAA,CAAA,SAA2B;QAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,KAAK;QAC/B,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,2KAAA,CAAA,SAA2B;QAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;YAAE,SAAS;QAAU,IAAI;QACrD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1745, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ext/window/Alert.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n    AlertDialog,\n    AlertDialogContent,\n    AlertDialogHeader,\n    AlertDialogFooter,\n    AlertDialogTitle,\n    AlertDialogCancel,\n    AlertDialogAction,\n    AlertDialogDescription,\n} from \"@/components/ui/alert-dialog\";\n\nexport interface ConfirmDialogProps {\n    open: boolean;\n    onClose: () => void;\n    onConfirm: () => void | Promise<void>;\n    title?: string;\n    description?: string;\n    cancelLabel?: string;\n    confirmLabel?: string;\n    destructive?: boolean;\n    children?: React.ReactNode;\n}\n\nexport default function ConfirmDialog({\n    open,\n    onClose,\n    onConfirm,\n    title = \"Are you sure?\",\n    description,\n    cancelLabel = \"Cancel\",\n    confirmLabel = \"Confirm\",\n    destructive = false,\n    children,\n}: ConfirmDialogProps) {\n    return (\n        <AlertDialog open={open} onOpenChange={onClose}>\n            <AlertDialogContent>\n                <AlertDialogHeader>\n                    <AlertDialogTitle>{title}</AlertDialogTitle>\n                    {description && (\n                        <AlertDialogDescription>{description}</AlertDialogDescription>\n                    )}\n                </AlertDialogHeader>\n\n                {children}\n\n                <AlertDialogFooter>\n                    <AlertDialogCancel onClick={onClose}>{cancelLabel}</AlertDialogCancel>\n                    <AlertDialogAction\n                        className={destructive ? \"bg-destructive hover:bg-destructive/90\" : \"\"}\n                        onClick={async () => {\n                            await onConfirm();\n                            onClose();\n                        }}\n                    >\n                        {confirmLabel}\n                    </AlertDialogAction>\n                </AlertDialogFooter>\n            </AlertDialogContent>\n        </AlertDialog>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAyBe,SAAS,cAAc,EAClC,IAAI,EACJ,OAAO,EACP,SAAS,EACT,QAAQ,eAAe,EACvB,WAAW,EACX,cAAc,QAAQ,EACtB,eAAe,SAAS,EACxB,cAAc,KAAK,EACnB,QAAQ,EACS;IACjB,qBACI,8OAAC,2IAAA,CAAA,cAAW;QAAC,MAAM;QAAM,cAAc;kBACnC,cAAA,8OAAC,2IAAA,CAAA,qBAAkB;;8BACf,8OAAC,2IAAA,CAAA,oBAAiB;;sCACd,8OAAC,2IAAA,CAAA,mBAAgB;sCAAE;;;;;;wBAClB,6BACG,8OAAC,2IAAA,CAAA,yBAAsB;sCAAE;;;;;;;;;;;;gBAIhC;8BAED,8OAAC,2IAAA,CAAA,oBAAiB;;sCACd,8OAAC,2IAAA,CAAA,oBAAiB;4BAAC,SAAS;sCAAU;;;;;;sCACtC,8OAAC,2IAAA,CAAA,oBAAiB;4BACd,WAAW,cAAc,2CAA2C;4BACpE,SAAS;gCACL,MAAM;gCACN;4BACJ;sCAEC;;;;;;;;;;;;;;;;;;;;;;;AAMzB","debugId":null}},
    {"offset": {"line": 1828, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1856, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ext/form/BaseFormField.tsx"],"sourcesContent":["import { Label } from \"@/components/ui/label\";\nimport { cn } from \"@/lib/utils\"; // utility to merge classes\nimport { ReactNode } from \"react\";\n\ninterface BaseFormFieldProps {\n    label?: string;\n    htmlFor?: string;\n    required?: boolean;\n    className?: string;\n    children: ReactNode;\n}\n\nexport const BaseFormField = ({\n    label,\n    htmlFor,\n    required,\n    className,\n    children,\n}: BaseFormFieldProps) => (\n    <div className={cn(\"space-y-2\", className)}>\n        {label && (\n            <Label htmlFor={htmlFor} className=\"font-medium\">\n                {label}\n                {required && <span className=\"text-red-500 ml-1\">*</span>}\n            </Label>\n        )}\n        {children}\n    </div>\n);\n"],"names":[],"mappings":";;;;AAAA;AACA,wMAAkC,2BAA2B;;;;AAWtD,MAAM,gBAAgB,CAAC,EAC1B,KAAK,EACL,OAAO,EACP,QAAQ,EACR,SAAS,EACT,QAAQ,EACS,iBACjB,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;;YAC3B,uBACG,8OAAC,iIAAA,CAAA,QAAK;gBAAC,SAAS;gBAAS,WAAU;;oBAC9B;oBACA,0BAAY,8OAAC;wBAAK,WAAU;kCAAoB;;;;;;;;;;;;YAGxD","debugId":null}},
    {"offset": {"line": 1900, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ext/form/DateInput.tsx"],"sourcesContent":["import { Input } from \"@/components/ui/input\";\nimport { BaseFormField } from \"./BaseFormField\";\n\ninterface DateInputProps {\n    label?: string;\n    name: string;\n    value: string;\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    required?: boolean;\n}\n\nexport const DateInput = ({\n    label,\n    name,\n    value,\n    onChange,\n    required,\n}: DateInputProps) => (\n    <BaseFormField label={label} htmlFor={name} required={required}>\n        <Input\n            id={name}\n            name={name}\n            value={value}\n            onChange={onChange}\n            type=\"date\"\n            required={required}\n        />\n    </BaseFormField>\n);\n\nexport default DateInput;"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAUO,MAAM,YAAY,CAAC,EACtB,KAAK,EACL,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,QAAQ,EACK,iBACb,8OAAC,kJAAA,CAAA,gBAAa;QAAC,OAAO;QAAO,SAAS;QAAM,UAAU;kBAClD,cAAA,8OAAC,iIAAA,CAAA,QAAK;YACF,IAAI;YACJ,MAAM;YACN,OAAO;YACP,UAAU;YACV,MAAK;YACL,UAAU;;;;;;;;;;;uCAKP","debugId":null}},
    {"offset": {"line": 1938, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ext/form/TextInput.tsx"],"sourcesContent":["import { Input } from \"@/components/ui/input\";\nimport { BaseFormField } from \"./BaseFormField\";\n\ninterface TextInputProps {\n    label?: string;\n    name: string;\n    value: string;\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    placeholder?: string;\n    required?: boolean;\n    type?: \"text\" | \"email\" | \"password\";\n    disabled?: boolean;\n}\n\nexport const TextInput = ({\n    label,\n    name,\n    value,\n    onChange,\n    placeholder,\n    required,\n    type = \"text\",\n    disabled,\n}: TextInputProps) => (\n    <BaseFormField label={label} htmlFor={name} required={required}>\n        <Input\n            id={name}\n            name={name}\n            value={value}\n            onChange={onChange}\n            placeholder={placeholder}\n            required={required}\n            type={type}\n            disabled={disabled}\n        />\n    </BaseFormField>\n);\n\nexport default TextInput;"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAaO,MAAM,YAAY,CAAC,EACtB,KAAK,EACL,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,WAAW,EACX,QAAQ,EACR,OAAO,MAAM,EACb,QAAQ,EACK,iBACb,8OAAC,kJAAA,CAAA,gBAAa;QAAC,OAAO;QAAO,SAAS;QAAM,UAAU;kBAClD,cAAA,8OAAC,iIAAA,CAAA,QAAK;YACF,IAAI;YACJ,MAAM;YACN,OAAO;YACP,UAAU;YACV,aAAa;YACb,UAAU;YACV,MAAM;YACN,UAAU;;;;;;;;;;;uCAKP","debugId":null}},
    {"offset": {"line": 1978, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2203, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/components/ext/form/ComboBox.tsx"],"sourcesContent":["// components/ext/form/ComboBox.tsx\nimport {\n    Select,\n    SelectContent,\n    SelectItem,\n    SelectTrigger,\n    SelectValue,\n} from \"@/components/ui/select\";\n\ninterface ComboBoxProps {\n    label?: string;\n    options: { label: string; value: string }[];\n    value?: string;\n    onChange?: (value: string) => void;\n}\n\nexport default function ComboBox({ label, options, value, onChange }: ComboBoxProps) {\n    return (\n        <div className=\"space-y-1\">\n            {label && <label className=\"text-sm font-medium\">{label}</label>}\n            <Select value={value} onValueChange={onChange}>\n                <SelectTrigger>\n                    <SelectValue placeholder=\"Select...\" />\n                </SelectTrigger>\n                <SelectContent>\n                    {options.map((opt) => (\n                        <SelectItem key={opt.value} value={opt.value}>\n                            {opt.label}\n                        </SelectItem>\n                    ))}\n                </SelectContent>\n            </Select>\n        </div>\n    );\n}\n"],"names":[],"mappings":"AAAA,mCAAmC;;;;;AACnC;;;AAee,SAAS,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAiB;IAC/E,qBACI,8OAAC;QAAI,WAAU;;YACV,uBAAS,8OAAC;gBAAM,WAAU;0BAAuB;;;;;;0BAClD,8OAAC,kIAAA,CAAA,SAAM;gBAAC,OAAO;gBAAO,eAAe;;kCACjC,8OAAC,kIAAA,CAAA,gBAAa;kCACV,cAAA,8OAAC,kIAAA,CAAA,cAAW;4BAAC,aAAY;;;;;;;;;;;kCAE7B,8OAAC,kIAAA,CAAA,gBAAa;kCACT,QAAQ,GAAG,CAAC,CAAC,oBACV,8OAAC,kIAAA,CAAA,aAAU;gCAAiB,OAAO,IAAI,KAAK;0CACvC,IAAI,KAAK;+BADG,IAAI,KAAK;;;;;;;;;;;;;;;;;;;;;;AAQlD","debugId":null}},
    {"offset": {"line": 2273, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/app/%28packages%29/%28appsettings%29/divisions/DivisionForm.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport {\n    Sheet,\n    SheetContent,\n    SheetHeader,\n    SheetTitle,\n    SheetFooter,\n} from \"@/components/ui/sheet\";\nimport { Button } from \"@/components/ui/button\";\nimport { DateInput } from \"@/components/ext/form/DateInput\";\nimport { TextInput } from \"@/components/ext/form/TextInput\";\nimport ComboBox from \"@/components/ext/form/ComboBox\";\n\ninterface DivisionFormProps {\n    open: boolean;\n    onClose: () => void;\n    onSubmit: (values: any) => void;\n    mode?: \"create\" | \"edit\";\n    initialValues?: any;\n}\n\nconst defaultValues = {\n    name: \"\",\n    division_code: \"\",\n    start_date: null,\n    end_date: null,\n    operating_unit: \"\",\n    legal_entity: \"\",\n    credit_account: \"\",\n    debit_account: \"\",\n    division_type: \"DC\",\n    accounted_currency: \"\",\n};\n\nexport default function DivisionForm({\n    open,\n    onClose,\n    onSubmit,\n    mode = \"create\",\n    initialValues = defaultValues,\n}: DivisionFormProps) {\n    const [formValues, setFormValues] = useState(initialValues);\n\n    const handleChange = (field: string, value: any) => {\n        setFormValues((prev) => ({ ...prev, [field]: value }));\n    };\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n\n        console.log(\"Form submitted:\", formValues);\n        onSubmit(formValues);\n    };\n\n    return (\n        <Sheet open={open} onOpenChange={onClose}>\n            <SheetContent className=\"w-full sm:max-w-xl overflow-y-auto p-5\">\n                <SheetHeader>\n                    <SheetTitle>\n                        {mode === \"create\" ? \"Create Division\" : \"Edit Division\"}\n                    </SheetTitle>\n                </SheetHeader>\n\n                <form\n                    className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-6\"\n                    onSubmit={handleSubmit}\n                >\n                    <TextInput\n                        label=\"Name\"\n                        name=\"name\"\n                        value={formValues.name}\n                        onChange={(e) => handleChange(\"name\", e.target.value)}\n                        required\n                    />\n                    <TextInput\n                        label=\"Division Code\"\n                        name=\"division_code\"\n                        value={formValues.division_code}\n                        onChange={(e) => handleChange(\"division_code\", e.target.value)}\n                        required\n                    />\n                    <DateInput\n                        label=\"Start Date\"\n                        name=\"start_date\"\n                        value={formValues.start_date}\n                        onChange={(date) => handleChange(\"start_date\", date)}\n                    />\n                    <DateInput\n                        label=\"End Date\"\n                        name=\"end_date\"\n                        value={formValues.end_date}\n                        onChange={(date) => handleChange(\"end_date\", date)}\n                    />\n                    <TextInput\n                        label=\"Operating Unit\"\n                        name=\"operating_unit\"\n                        value={formValues.operating_unit}\n                        onChange={(e) => handleChange(\"operating_unit\", e.target.value)}\n                    />\n                    <TextInput\n                        label=\"Legal Entity\"\n                        name=\"legal_entity\"\n                        value={formValues.legal_entity}\n                        onChange={(e) => handleChange(\"legal_entity\", e.target.value)}\n                    />\n                    <TextInput\n                        label=\"Credit Account\"\n                        name=\"credit_account\"\n                        value={formValues.credit_account}\n                        onChange={(e) => handleChange(\"credit_account\", e.target.value)}\n                    />\n                    <TextInput\n                        label=\"Debit Account\"\n                        name=\"debit_account\"\n                        value={formValues.debit_account}\n                        onChange={(e) => handleChange(\"debit_account\", e.target.value)}\n                    />\n                    <ComboBox\n                        label=\"Division Type\"\n                        value={formValues.division_type}\n                        options={[\"DC\", \"HO\", \"BR\"]}\n                        onChange={(val) => handleChange(\"division_type\", val)}\n                    />\n                    <TextInput\n                        label=\"Accounted Currency\"\n                        name=\"accounted_currency\"\n                        value={formValues.accounted_currency}\n                        onChange={(e) => handleChange(\"accounted_currency\", e.target.value)}\n                    />\n                </form>\n                <div className=\"flex-1\">\n                </div>\n\n                <SheetFooter className=\"grid grid-cols-2 gap-2 justify-end mt-6\">\n                    <Button variant=\"outline\" onClick={onClose}>\n                        Cancel\n                    </Button>\n                    <Button type=\"submit\" onClick={handleSubmit}>\n                        {mode === \"create\" ? \"Create\" : \"Save Changes\"}\n                    </Button>\n                </SheetFooter>\n            </SheetContent>\n        </Sheet>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAOA;AACA;AACA;AACA;AAbA;;;;;;;;AAuBA,MAAM,gBAAgB;IAClB,MAAM;IACN,eAAe;IACf,YAAY;IACZ,UAAU;IACV,gBAAgB;IAChB,cAAc;IACd,gBAAgB;IAChB,eAAe;IACf,eAAe;IACf,oBAAoB;AACxB;AAEe,SAAS,aAAa,EACjC,IAAI,EACJ,OAAO,EACP,QAAQ,EACR,OAAO,QAAQ,EACf,gBAAgB,aAAa,EACb;IAChB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,eAAe,CAAC,OAAe;QACjC,cAAc,CAAC,OAAS,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,MAAM,EAAE;YAAM,CAAC;IACxD;IAEA,MAAM,eAAe,CAAC;QAClB,EAAE,cAAc;QAEhB,QAAQ,GAAG,CAAC,mBAAmB;QAC/B,SAAS;IACb;IAEA,qBACI,8OAAC,iIAAA,CAAA,QAAK;QAAC,MAAM;QAAM,cAAc;kBAC7B,cAAA,8OAAC,iIAAA,CAAA,eAAY;YAAC,WAAU;;8BACpB,8OAAC,iIAAA,CAAA,cAAW;8BACR,cAAA,8OAAC,iIAAA,CAAA,aAAU;kCACN,SAAS,WAAW,oBAAoB;;;;;;;;;;;8BAIjD,8OAAC;oBACG,WAAU;oBACV,UAAU;;sCAEV,8OAAC,8IAAA,CAAA,YAAS;4BACN,OAAM;4BACN,MAAK;4BACL,OAAO,WAAW,IAAI;4BACtB,UAAU,CAAC,IAAM,aAAa,QAAQ,EAAE,MAAM,CAAC,KAAK;4BACpD,QAAQ;;;;;;sCAEZ,8OAAC,8IAAA,CAAA,YAAS;4BACN,OAAM;4BACN,MAAK;4BACL,OAAO,WAAW,aAAa;4BAC/B,UAAU,CAAC,IAAM,aAAa,iBAAiB,EAAE,MAAM,CAAC,KAAK;4BAC7D,QAAQ;;;;;;sCAEZ,8OAAC,8IAAA,CAAA,YAAS;4BACN,OAAM;4BACN,MAAK;4BACL,OAAO,WAAW,UAAU;4BAC5B,UAAU,CAAC,OAAS,aAAa,cAAc;;;;;;sCAEnD,8OAAC,8IAAA,CAAA,YAAS;4BACN,OAAM;4BACN,MAAK;4BACL,OAAO,WAAW,QAAQ;4BAC1B,UAAU,CAAC,OAAS,aAAa,YAAY;;;;;;sCAEjD,8OAAC,8IAAA,CAAA,YAAS;4BACN,OAAM;4BACN,MAAK;4BACL,OAAO,WAAW,cAAc;4BAChC,UAAU,CAAC,IAAM,aAAa,kBAAkB,EAAE,MAAM,CAAC,KAAK;;;;;;sCAElE,8OAAC,8IAAA,CAAA,YAAS;4BACN,OAAM;4BACN,MAAK;4BACL,OAAO,WAAW,YAAY;4BAC9B,UAAU,CAAC,IAAM,aAAa,gBAAgB,EAAE,MAAM,CAAC,KAAK;;;;;;sCAEhE,8OAAC,8IAAA,CAAA,YAAS;4BACN,OAAM;4BACN,MAAK;4BACL,OAAO,WAAW,cAAc;4BAChC,UAAU,CAAC,IAAM,aAAa,kBAAkB,EAAE,MAAM,CAAC,KAAK;;;;;;sCAElE,8OAAC,8IAAA,CAAA,YAAS;4BACN,OAAM;4BACN,MAAK;4BACL,OAAO,WAAW,aAAa;4BAC/B,UAAU,CAAC,IAAM,aAAa,iBAAiB,EAAE,MAAM,CAAC,KAAK;;;;;;sCAEjE,8OAAC,6IAAA,CAAA,UAAQ;4BACL,OAAM;4BACN,OAAO,WAAW,aAAa;4BAC/B,SAAS;gCAAC;gCAAM;gCAAM;6BAAK;4BAC3B,UAAU,CAAC,MAAQ,aAAa,iBAAiB;;;;;;sCAErD,8OAAC,8IAAA,CAAA,YAAS;4BACN,OAAM;4BACN,MAAK;4BACL,OAAO,WAAW,kBAAkB;4BACpC,UAAU,CAAC,IAAM,aAAa,sBAAsB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;8BAG1E,8OAAC;oBAAI,WAAU;;;;;;8BAGf,8OAAC,iIAAA,CAAA,cAAW;oBAAC,WAAU;;sCACnB,8OAAC,kIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAU,SAAS;sCAAS;;;;;;sCAG5C,8OAAC,kIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,SAAS;sCAC1B,SAAS,WAAW,WAAW;;;;;;;;;;;;;;;;;;;;;;;AAMxD","debugId":null}},
    {"offset": {"line": 2503, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/app/loading.tsx"],"sourcesContent":["// app/loading.tsx\n// Global route‑segment loader for Next.js App Router\n// Displays a full‑page load mask using TailwindCSS, ShadCN primitives & Lucide icon.\n\n\"use client\";\n\nexport default function Loading() {\n    return (\n        <div className=\"min-h-screen flex items-center justify-center bg-muted/50\">\n            {/* Optional logo & spinner card */}\n\n        </div>\n    );\n}\n\n/*\n * Notes / Usage\n * ───────────────────────────────────────────────────────────────────────────\n * 1. Place this file at `app/loading.tsx` (or inside any route segment) and\n *    Next‑JS will automatically show it while the parallel route server code\n *    or client components hydrate.\n * 2. Tailwind utility `animate-fade-in` expects the following in globals:\n *      @keyframes fade-in { from {opacity:0} to {opacity:1} }\n *      .animate-fade-in { @apply motion-safe:animate-[fade-in_0.4s_ease-in]; }\n * 3. Replace `/newco_logo.png` with your own asset or remove <Image /> if not needed.\n */\n"],"names":[],"mappings":"AAAA,kBAAkB;AAClB,qDAAqD;AACrD,qFAAqF;;;;;AAErF;;AAEe,SAAS;IACpB,qBACI,8OAAC;QAAI,WAAU;;;;;;AAKvB,EAEA;;;;;;;;;;CAUC","debugId":null}},
    {"offset": {"line": 2537, "column": 0}, "map": {"version":3,"sources":["file:///Users/anandsinghbondili/Professional/NewCo/Projects/newco2/frontend/src/app/%28packages%29/%28appsettings%29/divisions/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport DivisionGrid, { DivisionRow } from \"./DivisionGrid\";\nimport { deleteDivision } from \"./actions\";\nimport { Panel } from \"@/components/ext/containers/Panel\";\nimport ConfirmDialog from \"@/components/ext/window/Alert\";\nimport DivisionForm from \"./DivisionForm\";\nimport Loading from \"@/app/loading\";\n\nexport default function DivisionsPage() {\n    const [rows, setRows] = useState<DivisionRow[]>([]);\n    const [selectedId, setSelectedId] = useState<number | null>(null);\n    const [loading, setLoading] = useState(true);\n    const [showFormDialog, setShowFormDialog] = useState(false);\n    const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n    const [formMode, setFormMode] = useState<\"create\" | \"edit\">(\"create\");\n\n    const fetchData = async () => {\n        setLoading(true);\n        try {\n            const response = await fetch(\"http://localhost:5050/api/divisions\");\n            if (!response.ok) throw new Error(\"Failed to fetch divisions\");\n            const data = await response.json();\n            setRows(data);\n        } catch (error) {\n            console.error(\"Error fetching divisions:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const handleDelete = async () => {\n        if (!selectedId) return;\n        try {\n            await deleteDivision(selectedId);\n            setRows(prev => prev.filter(r => r.id !== selectedId));\n            setSelectedId(null);\n        } catch (error) {\n            console.error(\"Error deleting division:\", error);\n        } finally {\n            setShowDeleteDialog(false);\n        }\n    };\n\n    const handleFormSubmit = async (values: any) => {\n        try {\n            console.log(\"Form submitted:\", values);\n            // Add your create/update logic here\n            await fetchData(); // Refresh data after form submission\n        } catch (error) {\n            console.error(\"Error submitting form:\", error);\n        } finally {\n            setShowFormDialog(false);\n        }\n    };\n\n    const openCreateForm = () => {\n        setFormMode(\"create\");\n        setShowFormDialog(true);\n    };\n\n    const openEditForm = () => {\n        if (!selectedId) return;\n        setFormMode(\"edit\");\n        setShowFormDialog(true);\n    };\n\n    const selectedDivision = rows.find(r => r.id === selectedId);\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    return (\n        <>\n            <Panel\n                title=\"Divisions\"\n                onCreate={openCreateForm}\n                onEdit={selectedId ? openEditForm : undefined}\n                onDelete={selectedId ? () => setShowDeleteDialog(true) : undefined}\n            >\n                <DivisionGrid\n                    data={rows}\n                    onRowSelect={setSelectedId}\n                />\n            </Panel>\n\n            {/* Form Dialog */}\n            {showFormDialog && (\n                <DivisionForm\n                    open={showFormDialog}\n                    onClose={() => setShowFormDialog(false)}\n                    onSubmit={handleFormSubmit}\n                    mode={formMode}\n                    initialValues={formMode === \"edit\" ? selectedDivision : undefined}\n                />\n            )}\n\n            {/* Delete Confirmation Dialog */}\n            <ConfirmDialog\n                open={showDeleteDialog}\n                onClose={() => setShowDeleteDialog(false)}\n                onConfirm={handleDelete}\n                title=\"Delete Division\"\n                description=\"Are you sure you want to delete this division?\"\n                destructive\n            />\n        </>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;AAUe,SAAS;IACpB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAClD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAC5D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqB;IAE5D,MAAM,YAAY;QACd,WAAW;QACX,IAAI;YACA,MAAM,WAAW,MAAM,MAAM;YAC7B,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;YAClC,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ;QACZ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC/C,SAAU;YACN,WAAW;QACf;IACJ;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN;IACJ,GAAG,EAAE;IAEL,MAAM,eAAe;QACjB,IAAI,CAAC,YAAY;QACjB,IAAI;YACA,MAAM,CAAA,GAAA,kMAAA,CAAA,iBAAc,AAAD,EAAE;YACrB,QAAQ,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;YAC1C,cAAc;QAClB,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,4BAA4B;QAC9C,SAAU;YACN,oBAAoB;QACxB;IACJ;IAEA,MAAM,mBAAmB,OAAO;QAC5B,IAAI;YACA,QAAQ,GAAG,CAAC,mBAAmB;YAC/B,oCAAoC;YACpC,MAAM,aAAa,qCAAqC;QAC5D,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,0BAA0B;QAC5C,SAAU;YACN,kBAAkB;QACtB;IACJ;IAEA,MAAM,iBAAiB;QACnB,YAAY;QACZ,kBAAkB;IACtB;IAEA,MAAM,eAAe;QACjB,IAAI,CAAC,YAAY;QACjB,YAAY;QACZ,kBAAkB;IACtB;IAEA,MAAM,mBAAmB,KAAK,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;IAEjD,IAAI,SAAS;QACT,qBAAO,8OAAC,sHAAA,CAAA,UAAO;;;;;IACnB;IAEA,qBACI;;0BACI,8OAAC,gJAAA,CAAA,QAAK;gBACF,OAAM;gBACN,UAAU;gBACV,QAAQ,aAAa,eAAe;gBACpC,UAAU,aAAa,IAAM,oBAAoB,QAAQ;0BAEzD,cAAA,8OAAC,2KAAA,CAAA,UAAY;oBACT,MAAM;oBACN,aAAa;;;;;;;;;;;YAKpB,gCACG,8OAAC,2KAAA,CAAA,UAAY;gBACT,MAAM;gBACN,SAAS,IAAM,kBAAkB;gBACjC,UAAU;gBACV,MAAM;gBACN,eAAe,aAAa,SAAS,mBAAmB;;;;;;0BAKhE,8OAAC,4IAAA,CAAA,UAAa;gBACV,MAAM;gBACN,SAAS,IAAM,oBAAoB;gBACnC,WAAW;gBACX,OAAM;gBACN,aAAY;gBACZ,WAAW;;;;;;;;AAI3B","debugId":null}}]
}